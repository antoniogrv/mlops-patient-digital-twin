name: Manually inject ECR image to ECS

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1                   
  ECR_REPOSITORY: mlops-patient-digital-twin
  ECR_IMAGE: 003983737818.dkr.ecr.eu-central-1.amazonaws.com/mlops-patient-digital-twin:3201f1bd6c47caf0c714dc937a4e9d339482d902
  ECS_SERVICE: twin-mlops-service                 
  ECS_CLUSTER: default                 
  ECS_TASK_DEFINITION: .github/workflows/__FARGATE_SERVICE_DEFINITION.json

  CONTAINER_NAME: twin
                                               

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_IMAGE }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
